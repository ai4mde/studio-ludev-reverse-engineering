# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: 
    - "prototype"

permissions:
  contents: read

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install cached dependencies
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: frontend/package.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint_index

    - name: Check TypeScript compilation
      working-directory: ./frontend
      run: npm run tsc

  backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies

    - name: Install dependencies      
      run: pip install -r ${{ github.workspace }}/requirements.txt

    - name: Lint with ruff
      run: |
          ruff check ./api/model/importer/

    - name: Python type check with mypy
      run : mypy --follow-imports=skip --config-file="./api/pyproject.toml" ./api/model/importer/
      
    - name: Test with pytest
      run: |
        pytest
